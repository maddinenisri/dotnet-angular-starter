name: SonarCloud Analysis

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  dotnet-backend:
    name: .NET Backend Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Install SonarCloud scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Restore dependencies
        run: dotnet restore

      - name: Begin SonarScanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"dotnet-angular-starter" \
            /o:"maddinenisri" \
            /d:sonar.token="$SONAR_TOKEN" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
            /d:sonar.exclusions="**/Migrations/**,**/appsettings*.json,**/bin/**,**/obj/**,**/*.Designer.cs" \
            /d:sonar.coverage.exclusions="**/Migrations/**,**/Program.cs" \
            /d:sonar.cpd.exclusions="**/Migrations/**"

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Run Unit Tests with Coverage
        run: |
          dotnet test tests/PersonApi.UnitTests/PersonApi.UnitTests.csproj \
            --no-build \
            --configuration Release \
            --collect:"XPlat Code Coverage" \
            --results-directory ./coverage/unit \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: Run Integration Tests with Coverage
        run: |
          dotnet test tests/PersonApi.IntegrationTests/PersonApi.IntegrationTests.csproj \
            --no-build \
            --configuration Release \
            --collect:"XPlat Code Coverage" \
            --results-directory ./coverage/integration \
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover

      - name: End SonarScanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"

  angular-frontend:
    name: Angular Frontend Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: web/person-app/package-lock.json

      - name: Install dependencies
        working-directory: web/person-app
        run: npm ci

      - name: Install Chrome for testing
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser

      - name: Run tests with coverage
        working-directory: web/person-app
        run: npm test -- --browsers=ChromeHeadless --watch=false --code-coverage
        env:
          CHROME_BIN: /usr/bin/chromium-browser

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: web/person-app
          args: >
            -Dsonar.projectKey=dotnet-angular-starter
            -Dsonar.organization=maddinenisri
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.test.inclusions=**/*.spec.ts
            -Dsonar.exclusions=**/*.spec.ts,**/node_modules/**,**/coverage/**
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
